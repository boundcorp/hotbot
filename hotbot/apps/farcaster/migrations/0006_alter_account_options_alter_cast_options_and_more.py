# Generated by Django 5.1.1 on 2024-09-05 03:22

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("farcaster", "0005_alter_cast_author"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="account",
            options={},
        ),
        migrations.AlterModelOptions(
            name="cast",
            options={},
        ),
        migrations.AlterModelOptions(
            name="channel",
            options={},
        ),
        migrations.AddField(
            model_name="cast",
            name="conversation",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="cast",
            name="author",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="casts",
                to="farcaster.account",
            ),
        ),
        migrations.AlterField(
            model_name="cast",
            name="channel",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="casts",
                to="farcaster.channel",
            ),
        ),
        migrations.CreateModel(
            name="AccountTag",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tag",
                    models.CharField(
                        choices=[
                            ("automated", "Automated"),
                            (
                                "user_giving_tips_with_content",
                                "User Giving Tips, post also contains original content",
                            ),
                            (
                                "user_giving_tips_without_content",
                                "User Giving Tips, no original content",
                            ),
                            (
                                "bot_tip_reply",
                                "Bot Tip Reply, automated reply to a tipping message, usually saying remaining balance",
                            ),
                            (
                                "original_content",
                                'Original Content, a real human message, it is on-topic and valid user content (as opposed to spam, nonsense, or tipping-without-content), its not just "haha" or "great point"',
                            ),
                            ("spam", "Spam"),
                            ("off_topic", "Off Topic"),
                            ("hate_speech", "Hate Speech"),
                            ("sexually_explicit", "Sexually Explicit"),
                        ],
                        max_length=255,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_tags",
                        to="farcaster.account",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CastTag",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tag",
                    models.CharField(
                        choices=[
                            ("automated", "Automated"),
                            (
                                "user_giving_tips_with_content",
                                "User Giving Tips, post also contains original content",
                            ),
                            (
                                "user_giving_tips_without_content",
                                "User Giving Tips, no original content",
                            ),
                            (
                                "bot_tip_reply",
                                "Bot Tip Reply, automated reply to a tipping message, usually saying remaining balance",
                            ),
                            (
                                "original_content",
                                'Original Content, a real human message, it is on-topic and valid user content (as opposed to spam, nonsense, or tipping-without-content), its not just "haha" or "great point"',
                            ),
                            ("spam", "Spam"),
                            ("off_topic", "Off Topic"),
                            ("hate_speech", "Hate Speech"),
                            ("sexually_explicit", "Sexually Explicit"),
                        ],
                        max_length=255,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cast",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cast_tags",
                        to="farcaster.cast",
                    ),
                ),
            ],
        ),
    ]
